#!/bin/bash
set -u

TOMCAT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../" >/dev/null 2>&1 && pwd)"
export TOMCAT

start_mosquitto() {
  # Start mosquitto message broker if it is not already running.
if [[ ! $(pgrep -l mosquitto | head -n1 | cut -d' ' -f2) == mosquitto ]]; then
    echo "The mosquitto message broker does not seem to be running, so we "\
         "will start it now."
    if [[ $OSTYPE == "darwin"* && $MACPORTS_FOUND -eq 1 ]]; then
        # If we get to this branch, we assume that MacPorts is not installed,
        # and the package manager is Homebrew. A Homebrew install of mosquitto
        # doesn't allow us to start mosquitto by just typing 'mosquitto' -
        # instead, we would have to do 'brew services start mosquitto'. To get
        # around the need to do this and just invoke the mosquitto executable
        # in the background, we give the full path to the mosquitto executable
        # under the Homebrew prefix.
        MOSQUITTO=$(brew --prefix)/sbin/mosquitto
    else
        MOSQUITTO=mosquitto
    fi

    "$MOSQUITTO" &> ${TOMCAT_TMP_DIR}/mosquitto.log &
fi
}

start_mosquitto
Xvfb:1 -screen 0 1400x900x24 &
export DISPLAY=:1.0
export TOMCAT_FULL_SCREEN=${TOMCAT_FULL_SCREEN:0}


cd "$TOMCAT"/external/malmo/Minecraft

replaceable=0
port=0
scorepolicy=0
env=0

while [ $# -gt 0 ]
do
    case "$1" in
        -replaceable) replaceable=1;;
        -port) port="$2"; shift;;
        -scorepolicy) scorepolicy="$2"; shift;;
        -env) env=1;;
        *) echo >&2 \
            "usage: $0 [-replaceable] [-port 10000] [-scorepolicy 0123] [-env]"
            exit 1;;
    esac
    shift
done

if ! [[ $port =~ ^-?[0-9]+$ ]]; then
    echo "Port value should be numeric"
    exit 1
fi

if [ \( $port -lt 0 \) -o \( $port -gt 65535 \) ]; then
    echo "Port value out of range 0-65535"
    exit 1
fi

if ! [[ $scorepolicy =~ ^-?[0-9]+$ ]]; then
    echo "Score policy should be numeric"
    exit 1
fi

# Now write the configuration file
if [ ! -d "run/config" ]; then
  mkdir run/config
fi
echo "# Configuration file
# Autogenerated from command-line options

malmoports {
  I:portOverride=$port
}
malmoscore {
  I:policy=$scorepolicy
}
" > run/config/malmomodCLIENT.cfg

if [ $replaceable -gt 0 ]; then
    echo "runtype {
  B:replaceable=true
}
" >> run/config/malmomodCLIENT.cfg
fi

if [ $env -gt 0 ]; then
    echo "envtype {
  B:env=true
}
" >> run/config/malmomodCLIENT.cfg
fi

session_cleanup() {
    pkill mosquitto_sub
    cleanup_status=0
    if [[ ${RECYCLE_MINECRAFT} -lt 2 ]]; then
        if ! "${TOMCAT}/tools/kill_minecraft"; then
            echo "Failed to kill Minecraft."
            exit 1
        fi
    fi
}





while
    ./gradlew setupDecompWorkspace
    ./gradlew build
    ./gradlew runClient
    [ $replaceable -gt 0 ]
do :; done


session_cleanup